<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .task-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 20px;
            margin: 15px 0;
            border-left: 5px solid #007acc;
        }
        .task-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 10px;
        }
        .priority-high { border-left-color: #ff4757; }
        .priority-medium { border-left-color: #ffa502; }
        .priority-low { border-left-color: #26de81; }
        .status-completed { opacity: 0.7; text-decoration: line-through; }
        .task-form {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 30px;
        }
        .form-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }
        .form-group {
            flex: 1;
        }
        .btn-primary {
            background: #007acc;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <nav class="navbar">
            <h1>ðŸŽ¯ Task Management</h1>
            <div class="nav-links">
                <a href="/">Home</a>
                <a href="/dashboard">Dashboard</a>
                <a href="/tasks" class="active">Tasks</a>
                <a href="/chat">Chat</a>
                <a href="/calendar">Calendar</a>
                <a href="/analytics">Analytics</a>
            </div>
        </nav>

        <div class="content">
            <div class="task-form">
                <h2>âž• Create New Task</h2>
                <form id="taskForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label>Task Title:</label>
                            <input type="text" id="taskTitle" placeholder="Enter task title..." required>
                        </div>
                        <div class="form-group">
                            <label>Assignee:</label>
                            <input type="text" id="taskAssignee" placeholder="Assign to...">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label>Priority:</label>
                            <select id="taskPriority">
                                <option value="Low">Low</option>
                                <option value="Medium" selected>Medium</option>
                                <option value="High">High</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Due Date:</label>
                            <input type="date" id="taskDueDate">
                        </div>
                    </div>
                    <button type="submit" class="btn-primary">Create Task</button>
                </form>
            </div>

            <h2>ðŸ“‹ Current Tasks</h2>
            <div id="tasksList">
                <div class="loading">Loading tasks...</div>
            </div>
        </div>
    </div>

    <script>
        // Load tasks
        async function loadTasks() {
            try {
                const response = await fetch('/api/tasks');
                const tasks = await response.json();
                displayTasks(tasks);
            } catch (error) {
                console.error('Error loading tasks:', error);
            }
        }

        function displayTasks(tasks) {
            const container = document.getElementById('tasksList');
            container.innerHTML = tasks.map(task => `
                <div class="task-card priority-${task.priority.toLowerCase()} ${task.status === 'Completed' ? 'status-completed' : ''}">
                    <div class="task-header">
                        <h3>${task.title}</h3>
                        <span class="priority-badge priority-${task.priority.toLowerCase()}">${task.priority}</span>
                    </div>
                    <p><strong>Assignee:</strong> ${task.assignee}</p>
                    <p><strong>Status:</strong> ${task.status}</p>
                    <p><strong>Due Date:</strong> ${task.dueDate}</p>
                    <div class="task-actions">
                        <button onclick="updateTaskStatus(${task.id})" class="btn-sm">Update Status</button>
                        <button onclick="deleteTask(${task.id})" class="btn-sm btn-danger">Delete</button>
                    </div>
                </div>
            `).join('');
        }

        // Create new task
        document.getElementById('taskForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const newTask = {
                title: document.getElementById('taskTitle').value,
                assignee: document.getElementById('taskAssignee').value,
                priority: document.getElementById('taskPriority').value,
                dueDate: document.getElementById('taskDueDate').value
            };

            try {
                const response = await fetch('/api/tasks', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(newTask)
                });
                const result = await response.json();
                alert('Task created successfully!');
                document.getElementById('taskForm').reset();
                loadTasks(); // Reload tasks
            } catch (error) {
                console.error('Error creating task:', error);
                alert('Error creating task');
            }
        });

        function updateTaskStatus(taskId) {
            alert(`Updating task ${taskId} status...`);
            // Add status update logic here
        }

        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                alert(`Deleting task ${taskId}...`);
                // Add delete logic here
            }
        }

        // Load tasks on page load
        loadTasks();
    </script>
</body>
</html>

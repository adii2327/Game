<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .analytics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .metric-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 25px;
            text-align: center;
        }
        .metric-value {
            font-size: 3em;
            font-weight: bold;
            color: #007acc;
            margin: 10px 0;
        }
        .metric-trend {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
            color: #26de81;
        }
        .chart-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 25px;
            margin-bottom: 20px;
        }
        .progress-bar {
            background: #f1f3f4;
            border-radius: 10px;
            height: 20px;
            margin: 10px 0;
            overflow: hidden;
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #007acc, #26de81);
            transition: width 0.3s ease;
        }
        .skill-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 15px 0;
        }
        .activity-item {
            display: flex;
            align-items: center;
            padding: 12px;
            background: #f8f9fa;
            border-radius: 8px;
            margin: 10px 0;
        }
        .activity-icon {
            font-size: 1.5em;
            margin-right: 15px;
        }
        .wellness-indicator {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin: 10px 0;
        }
        .wellness-emoji {
            font-size: 2em;
        }
    </style>
</head>
<body>
    <div class="container">
        <nav class="navbar">
            <h1>üìä Performance Analytics</h1>
            <div class="nav-links">
                <a href="/">Home</a>
                <a href="/dashboard">Dashboard</a>
                <a href="/tasks">Tasks</a>
                <a href="/chat">Chat</a>
                <a href="/calendar">Calendar</a>
                <a href="/analytics" class="active">Analytics</a>
            </div>
        </nav>

        <div class="content">
            <div class="analytics-grid" id="metricsGrid">
                <div class="loading">Loading analytics...</div>
            </div>

            <div class="chart-container">
                <h2>üìà Sprint Velocity</h2>
                <div id="sprintChart"></div>
            </div>

            <div class="analytics-grid">
                <div class="chart-container">
                    <h3>üõ†Ô∏è Team Skills Matrix</h3>
                    <div id="skillsMatrix"></div>
                </div>

                <div class="chart-container">
                    <h3>üí™ Wellness Metrics</h3>
                    <div id="wellnessMetrics"></div>
                </div>
            </div>

            <div class="chart-container">
                <h2>‚ö° Recent Team Activity</h2>
                <div id="recentActivity"></div>
            </div>
        </div>
    </div>

    <script>
        async function loadAnalytics() {
            try {
                const response = await fetch('/api/analytics');
                const analytics = await response.json();
                displayMetrics(analytics);
                displaySprintChart(analytics.project_velocity);
                displaySkillsMatrix(analytics);
                displayWellnessMetrics(analytics.wellness_metrics);
                
                const teamResponse = await fetch('/api/team-stats');
                const teamStats = await teamResponse.json();
                displayRecentActivity(teamStats.recent_activity);
                displaySkillsFromTeam(teamStats.skill_matrix);
            } catch (error) {
                console.error('Error loading analytics:', error);
            }
        }

        function displayMetrics(analytics) {
            const container = document.getElementById('metricsGrid');
            const { productivity, team_performance, wellness_metrics } = analytics;
            
            container.innerHTML = `
                <div class="metric-card">
                    <h3>üìà Productivity</h3>
                    <div class="metric-value">${productivity.current_week}%</div>
                    <div class="metric-trend">
                        ${productivity.trend === 'up' ? '‚ÜóÔ∏è' : '‚ÜòÔ∏è'} 
                        ${Math.abs(productivity.current_week - productivity.last_week)}% from last week
                    </div>
                </div>
                
                <div class="metric-card">
                    <h3>‚úÖ Tasks Completed</h3>
                    <div class="metric-value">${team_performance.tasks_completed}</div>
                    <div class="metric-trend">üéØ Excellent performance!</div>
                </div>
                
                <div class="metric-card">
                    <h3>üêõ Bugs Fixed</h3>
                    <div class="metric-value">${team_performance.bugs_fixed}</div>
                    <div class="metric-trend">üõ°Ô∏è Quality focus</div>
                </div>
                
                <div class="metric-card">
                    <h3>üöÄ Deployment Success</h3>
                    <div class="metric-value">${team_performance.deployment_success_rate}%</div>
                    <div class="metric-trend">‚ú® Outstanding reliability!</div>
                </div>
            `;
        }

        function displaySprintChart(velocity) {
            const container = document.getElementById('sprintChart');
            container.innerHTML = velocity.map(sprint => `
                <div class="skill-item">
                    <span><strong>${sprint.sprint}</strong></span>
                    <span>${sprint.completed}/${sprint.planned} tasks</span>
                </div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: ${(sprint.completed / sprint.planned) * 100}%"></div>
                </div>
            `).join('');
        }

        function displaySkillsFromTeam(skills) {
            const container = document.getElementById('skillsMatrix');
            container.innerHTML = Object.entries(skills).map(([skill, level]) => `
                <div class="skill-item">
                    <span><strong>${skill.charAt(0).toUpperCase() + skill.slice(1)}</strong></span>
                    <span>${level}%</span>
                </div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: ${level}%"></div>
                </div>
            `).join('');
        }

        function displayWellnessMetrics(wellness) {
            const container = document.getElementById('wellnessMetrics');
            
            const getWellnessEmoji = (score) => {
                if (score >= 8) return 'üòÑ';
                if (score >= 6) return 'üòä';
                if (score >= 4) return 'üòê';
                return 'üòî';
            };
            
            container.innerHTML = `
                <div class="wellness-indicator">
                    <span>Stress Level:</span>
                    <span class="wellness-emoji">${wellness.stress_level <= 4 ? 'üòå' : 'üò∞'}</span>
                    <span>${wellness.stress_level}/10</span>
                </div>
                
                <div class="wellness-indicator">
                    <span>Satisfaction:</span>
                    <span class="wellness-emoji">${getWellnessEmoji(wellness.satisfaction_score)}</span>
                    <span>${wellness.satisfaction_score}/10</span>
                </div>
                
                <div class="wellness-indicator">
                    <span>Work-Life Balance:</span>
                    <span class="wellness-emoji">${getWellnessEmoji(wellness.work_life_balance)}</span>
                    <span>${wellness.work_life_balance}/10</span>
                </div>
                
                <div class="wellness-indicator">
                    <span>Team Morale:</span>
                    <span class="wellness-emoji">${getWellnessEmoji(wellness.team_morale)}</span>
                    <span>${wellness.team_morale}/10</span>
                </div>
            `;
        }

        function displayRecentActivity(activities) {
            const container = document.getElementById('recentActivity');
            const icons = {
                'Task completed': '‚úÖ',
                'Code pushed': 'üì§',
                'Meeting scheduled': 'üìÖ',
                'Bug fixed': 'üêõ'
            };
            
            container.innerHTML = activities.map(activity => `
                <div class="activity-item">
                    <span class="activity-icon">${icons[activity.action] || '‚ö°'}</span>
                    <div>
                        <strong>${activity.action}</strong> by ${activity.user}
                        <div style="font-size: 0.9em; color: #666;">${activity.time}</div>
                    </div>
                </div>
            `).join('');
        }

        // Load analytics on page load
        loadAnalytics();

        // Auto-refresh every 30 seconds
        setInterval(loadAnalytics, 30000);
    </script>
</body>
</html>
